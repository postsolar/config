$submap = hyprctl dispatch submap
$showSubmapHints = ironbar bar hyprbar show-popup bindmode-hints
$hideSubmapHints = ironbar bar hyprbar hide-popup
$resetSubmap = hyprctl dispatch submap reset && $hideSubmapHints

# ~ cursor control

bind = SUPER, Z, exec, wl-kbptr -o modes=floating,click -o mode_floating.source=detect
bind = SUPER SHIFT, Z, exec, sh $scripts/keep-cursor.sh wl-kbptr -o modes=floating,click -o mode_floating.source=detect

bind = SUPER CTRL, Z, exec, hyprctl --batch 'keyword cursor:inactive_timeout 0; keyword cursor:hide_on_key_press false; dispatch submap cursor'
submap = cursor
  # wl-kbptr
  bindd = , 1, wl-kbptr: floating, exec, wl-kbptr -o modes=floating -o mode_floating.source=detect
  bindd = , 2, wl-kbptr: bisect, exec, wl-kbptr -o modes=bisect
  bindd = , 3, wl-kbptr: split, exec, wl-kbptr -o modes=split
  bindd = , 4, wl-kbptr: tile, exec, wl-kbptr -o modes=tile
  # move
  bindd = , left,  Move cursor left,  exec, wlrctl pointer move -10 0
  bindd = , right, Move cursor right, exec, wlrctl pointer move 10 0
  bindd = , up,    Move cursor up,    exec, wlrctl pointer move 0 -10
  bindd = , down,  Move cursor down,  exec, wlrctl pointer move 0 10
  # click
  bindd = ,      Return, Click left, exec,   wlrctl pointer click left
  bindd = SHIFT, Return, Click right, exec,  wlrctl pointer click right
  bindd = ALT,   Return, Click middle, exec, wlrctl pointer click middle
  # scroll
  bindd = ALT, left,  Scroll left,  exec, wlrctl pointer scroll -10 0
  bindd = ALT, right, Scroll right, exec, wlrctl pointer scroll 10 0
  bindd = ALT, up,    Scroll up,    exec, wlrctl pointer scroll 0 -10
  bindd = ALT, down,  Scroll down,  exec, wlrctl pointer scroll 0 10
  # exit
  bindd = , Escape, Reset submap, exec, hyprctl --batch 'keyword cursor:inactive_timeout 3; keyword cursor:hide_on_key_press true; dispatch submap reset'
submap = reset

# ~ programs

bind = SUPER SHIFT, Return, exec, kitty -1 --class 'kitty -float'

bind = SUPER, S, exec, walker
bind = SUPER ALT, S, exec, sherlock

bind = SUPER, Apostrophe, exec, smile
bind = SUPER, O, exec, copyq toggle

bind = SUPER SHIFT, N, exec, swaync-client --toggle-panel
bind = SUPER, N, exec, swaync-client --hide-all

bind = SUPER, B, exec, ironbar bar hyprbar toggle-visible

# ~ workspaces

bind = SUPER,       Tab, workspace, +1
bind = SUPER SHIFT, Tab, workspace, -1

bind = SUPER ALT, W, exec, $submap workspace && $showSubmapHints
submap = workspace
  bind = , 1, workspace, 1
  bind = , 2, workspace, 2
  bind = , 3, workspace, 3
  bind = , 4, workspace, 4
  bind = , 5, workspace, 5
  bind = , 6, workspace, 6
  bind = , 7, workspace, 7
  bind = , 8, workspace, 8
  bind = , 9, workspace, 9
  bind = , 0, workspace, 10
  bind = , catchall, exec, $resetSubmap
submap = reset

bind = SUPER, BackSpace, workspace, previous

bind = SUPER, I, togglespecialworkspace, special

# ~ mode change

bind = SUPER, W, scroller:setmode, toggle

# ~ focus change

bind = SUPER, Left,  scroller:movefocus, left
bind = SUPER, Right, scroller:movefocus, right
bind = SUPER, Up,    scroller:movefocus, up
bind = SUPER, Down,  scroller:movefocus, down

bind = SUPER, Home,  scroller:movefocus, beginning
bind = SUPER, End,   scroller:movefocus, end

# ~ movement

# also see: , nomode
bind = SUPER SHIFT, Left,  scroller:movewindow, left
bind = SUPER SHIFT, Right, scroller:movewindow, right
bind = SUPER SHIFT, Up,    scroller:movewindow, up
bind = SUPER SHIFT, Down,  scroller:movewindow, down

bind = SUPER SHIFT, Home,  scroller:movewindow, beginning
bind = SUPER SHIFT, End,   scroller:movewindow, end

bind = SUPER ALT, Left, scroller:movewindow, left, nomode
bind = SUPER ALT, Right, scroller:movewindow, right, nomode

bind = SUPER ALT, Up, movetoworkspace, -1
bind = SUPER ALT, Down, movetoworkspace, +1

binde = SUPER CTRL, Left,  movewindowpixel, -20 0, active
binde = SUPER CTRL, Right, movewindowpixel, 20 0, active
binde = SUPER CTRL, Up,    movewindowpixel, 0 -20, active
binde = SUPER CTRL, Down,  movewindowpixel, 0 20, active

# ~ gaps
binde = SUPER ALT, Minus, exec, bun $scripts/gaps.ts inner -3
binde = SUPER ALT, Equal, exec, bun $scripts/gaps.ts inner 3
binde = SUPER    , Minus, exec, bun $scripts/gaps.ts outer -3
binde = SUPER    , Equal, exec, bun $scripts/gaps.ts outer 3

# ~ resize

bind = SUPER, Comma, scroller:cyclewidth, -1
bind = SUPER, Period, scroller:cyclewidth, +1
bind = SUPER SHIFT, Comma, scroller:cycleheight, -1
bind = SUPER SHIFT, Period, scroller:cycleheight, +1

binde = SUPER CTRL ALT, Left,  resizewindowpixel, -20 0, active
binde = SUPER CTRL ALT, Right, resizewindowpixel, 20 0, active
binde = SUPER CTRL ALT, Up,    resizewindowpixel, 0 -20, active
binde = SUPER CTRL ALT, Down,  resizewindowpixel, 0 20, active

# ~ align + fit

# a note on submaps: `ir` flags make it exit on modded keys

bind = SUPER, Slash, exec, $submap scroller_align && $showSubmapHints
submap = scroller_align
  bindd = , Left,  Align window left,   scroller:alignwindow, left
  bindd = , Right, Align window right,  scroller:alignwindow, right
  bindd = , Up,    Align window up,     scroller:alignwindow, up
  bindd = , Down,  Align window down,   scroller:alignwindow, down
  bindd = , M,     Align window middle, scroller:alignwindow, middle
  bindd = , C,     Align window center, scroller:alignwindow, center
  bindd = , catchall, Submap reset, exec, $resetSubmap
submap = reset

bind = SUPER SHIFT, Slash, exec, $submap scroller_fit && $showSubmapHints
submap = scroller_fit
  bindd = ,      A, Fit height/width (active window),            scroller:fitsize,   active
  bindd = ,      V, Fit height/width (visible windows),          scroller:fitsize,   visible
  bindd = ,      L, Fit height/width (all windows),              scroller:fitsize,   all
  bindd = ,      E, Fit height/width (all windows to beginning), scroller:fitsize,   toend
  bindd = ,      B, Fit height/width (all windows to end),       scroller:fitsize,   tobeginning
  bindd = SHIFT, A, Fit width (active window),                   scroller:fitwidth,  active
  bindd = SHIFT, V, Fit width (visible windows),                 scroller:fitwidth,  visible
  bindd = SHIFT, L, Fit width (all windows),                     scroller:fitwidth,  all
  bindd = SHIFT, E, Fit width (all windows to beginning),        scroller:fitwidth,  toend
  bindd = SHIFT, B, Fit width (all windows to end),              scroller:fitwidth,  tobeginning
  bindd = ALT,   A, Fit height (active window),                  scroller:fitheight, active
  bindd = ALT,   V, Fit height (visible windows),                scroller:fitheight, visible
  bindd = ALT,   L, Fit height (all windows),                    scroller:fitheight, all
  bindd = ALT,   E, Fit height (all windows to beginning),       scroller:fitheight, toend
  bindd = ALT,   B, Fit height (all windows to end),             scroller:fitheight, tobeginning
  binddir = , catchall, Submap reset, exec, $resetSubmap
submap = reset

# reset width/height
bind = SUPER, K, scroller:setwidth, twothirds
bind = SUPER, H, scroller:setheight, one

# ~ admit / expel

bind = SUPER, BracketLeft,  scroller:admitwindow, left
bind = SUPER, BracketRight, scroller:admitwindow, right

bind = SUPER SHIFT, BracketLeft,  scroller:expelwindow, left
bind = SUPER SHIFT, BracketRight, scroller:expelwindow, right

# ~ pin

bind = SUPER, P, scroller:pin
bind = SUPER SHIFT, P, pin

# ~ select

bind = SUPER, F, scroller:selectiontoggle

bind = SUPER SHIFT, F, exec, $submap scroller_select && $showSubmapHints
submap = scroller_select
  bindd = , W, Select all windows on the workspace, scroller:selectionworkspace
  bindd = , R, Reset selection, scroller:selectionreset
  bindd = , Left, Move selected windows to the left, scroller:selectionmove, left
  bindd = , Right, Move selected windows to the right, scroller:selectionmove, right
  binddr = , catchall, Submap reset, exec, $resetSubmap
submap = reset

# ~ jump/overview

bind = SUPER, R, scroller:jump
bind = SUPER, A, scroller:toggleoverview

# ~ float

bind = SUPER, V, togglefloating
bind = SUPER SHIFT, V, event, { "name": "togglefocus" }

# ~ fullscreen

# the first argument is hyprland window state, the second is client's state
bind = SUPER      , grave, fullscreenstate, 1 -1
bind = SUPER SHIFT, grave, fullscreenstate, 2 -1
bind = SUPER      , F11  , fullscreenstate, -1 2

# ~ settings/mode change

# TODO: maybe rip submap hints out of hyprland helpers into separate one-off scripts, non-IPC
# some infrastructure for this is ready, stateful scroller mode events get logged to $XDG_STATE_HOME/hyprscroller-mode
bind = SUPER, BackSlash, exec, $submap scroller_settings && $showSubmapHints
submap = scroller_settings
  bindd = ,      C, Toggle centering active column,              exec, hyprctl dispatch scroller:setmodemodifier $(cat $XDG_STATE_HOME/hyprscroller-mode | grep -Eq nocenter_column && echo center_column || echo nocenter_column)
  bindd = SHIFT, C, Toggle centering active window (vertically), exec, hyprctl dispatch scroller:setmodemodifier $(cat $XDG_STATE_HOME/hyprscroller-mode | grep -Eq nocenter_window && echo center_window || echo nocenter_window)

  bindd = , right, New windows open after,            scroller:setmodemodifier, after
  bindd = , left,  New windows open before,           scroller:setmodemodifier, before
  bindd = , home,  New windows open at the beginning, scroller:setmodemodifier, beginning
  bindd = , end,   New windows open at the end,       scroller:setmodemodifier, end
  bindd = , up,    Focus new windows,                 scroller:setmodemodifier, focus
  bindd = , down,  Don't focus new windows,           scroller:setmodemodifier, nofocus

  bindird = , catchall, Reset submap, exec, $resetSubmap
submap = reset
