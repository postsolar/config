$submap = hyprctl dispatch submap
$submapHints = bun $scripts/submap-hints.ts
$submapReset = hyprctl dispatch submap reset && pkill --signal 31 nwg-wrapper

# ~ programs

bind = SUPER SHIFT, Return, exec, kitty -1 --class 'kitty -float'

bind = SUPER, S, exec, walker
bind = SUPER ALT, S, exec, sherlock

bind = SUPER, Apostrophe, exec, smile
bind = SUPER, O, exec, copyq toggle

bind = SUPER, N, exec, swaync-client --toggle-panel
bind = SUPER SHIFT, N, exec, swaync-client --hide-latest

bind = SUPER, Z, exec, sh $scripts/click.sh

bind = SUPER, B, exec, ironbar bar hyprbar toggle-visible

# ~ workspaces

bind = SUPER,       Tab, workspace, +1
bind = SUPER SHIFT, Tab, workspace, -1

bind = SUPER ALT, W, exec, $submap workspace && $submapHints workspace
submap = workspace
  bind = , 1, workspace, 1
  bind = , 2, workspace, 2
  bind = , 3, workspace, 3
  bind = , 4, workspace, 4
  bind = , 5, workspace, 5
  bind = , 6, workspace, 6
  bind = , 7, workspace, 7
  bind = , 8, workspace, 8
  bind = , 9, workspace, 9
  bind = , 0, workspace, 10
  bind = , catchall, exec, $submapReset
submap = reset

bind = SUPER, BackSpace, workspace, previous

# ~ mode change

# https://github.com/dawsers/hyprscroller/commit/d2a77fb00bbcda0f066c8585043706628509b47a
bind = SUPER, W, scroller:setmode, toggle

# ~ focus change

bind = SUPER, Left,  scroller:movefocus, left
bind = SUPER, Right, scroller:movefocus, right
bind = SUPER, Up,    scroller:movefocus, up
bind = SUPER, Down,  scroller:movefocus, down

bind = SUPER, Home,  scroller:movefocus, beginning
bind = SUPER, End,   scroller:movefocus, end

# ~ movement

# also see: , nomode
bind = SUPER SHIFT, Left,  scroller:movewindow, left
bind = SUPER SHIFT, Right, scroller:movewindow, right
bind = SUPER SHIFT, Up,    scroller:movewindow, up
bind = SUPER SHIFT, Down,  scroller:movewindow, down

bind = SUPER SHIFT, Home,  scroller:movewindow, beginning
bind = SUPER SHIFT, End,   scroller:movewindow, end

bind = SUPER ALT, Left, scroller:movewindow, left, nomode
bind = SUPER ALT, Right, scroller:movewindow, right, nomode

bind = SUPER ALT, Up, movetoworkspace, -1
bind = SUPER ALT, Down, movetoworkspace, +1

binde = SUPER CTRL, Left,  movewindowpixel, -20 0, active
binde = SUPER CTRL, Right, movewindowpixel, 20 0, active
binde = SUPER CTRL, Up,    movewindowpixel, 0 -20, active
binde = SUPER CTRL, Down,  movewindowpixel, 0 20, active

# ~ resize

bind = SUPER, Comma, scroller:cyclewidth, -1
bind = SUPER, Period, scroller:cyclewidth, +1
bind = SUPER SHIFT, Comma, scroller:cycleheight, -1
bind = SUPER SHIFT, Period, scroller:cycleheight, +1

binde = SUPER CTRL ALT, Left,  resizewindowpixel, -20 0, active
binde = SUPER CTRL ALT, Right, resizewindowpixel, 20 0, active
binde = SUPER CTRL ALT, Up,    resizewindowpixel, 0 -20, active
binde = SUPER CTRL ALT, Down,  resizewindowpixel, 0 20, active

# I guess this counts as resizing too
binde = SUPER ALT, Minus, exec, bun $scripts/gaps.ts inner -3
binde = SUPER ALT, Equal, exec, bun $scripts/gaps.ts inner 3
binde = SUPER    , Minus, exec, bun $scripts/gaps.ts outer -3
binde = SUPER    , Equal, exec, bun $scripts/gaps.ts outer 3

# ~ align + fit

# a note on submaps: `ir` flags make it exit on modded keys

bind = SUPER, Slash, exec, $submap scroller_align && $submapHints scroller_align
submap = scroller_align
  bind = , Left,  scroller:alignwindow, left
  bind = , Right, scroller:alignwindow, right
  bind = , Up,    scroller:alignwindow, up
  bind = , Down,  scroller:alignwindow, down
  bind = , M,     scroller:alignwindow, middle
  bind = , C,     scroller:alignwindow, center
  bind = , catchall, exec, $submapReset
submap = reset

bind = SUPER SHIFT, Slash, exec, $submap scroller_fit && $submapHints scroller_fit
submap = scroller_fit
  bind = ,      A, scroller:fitsize,   active
  bind = ,      V, scroller:fitsize,   visible
  bind = ,      L, scroller:fitsize,   all
  bind = ,      E, scroller:fitsize,   toend
  bind = ,      B, scroller:fitsize,   tobeginning
  bind = SHIFT, A, scroller:fitwidth,  active
  bind = SHIFT, V, scroller:fitwidth,  visible
  bind = SHIFT, L, scroller:fitwidth,  all
  bind = SHIFT, E, scroller:fitwidth,  toend
  bind = SHIFT, B, scroller:fitwidth,  tobeginning
  bind = ALT,   A, scroller:fitheight, active
  bind = ALT,   V, scroller:fitheight, visible
  bind = ALT,   L, scroller:fitheight, all
  bind = ALT,   E, scroller:fitheight, toend
  bind = ALT,   B, scroller:fitheight, tobeginning
  bindir = , catchall, exec, $submapReset
submap = reset

# reset width/height
bind = SUPER, K, scroller:setwidth, twothirds
bind = SUPER, H, scroller:setheight, one

# ~ admit / expel

bind = SUPER, BracketLeft,  scroller:admitwindow, left
bind = SUPER, BracketRight, scroller:admitwindow, right

bind = SUPER SHIFT, BracketLeft,  scroller:expelwindow, left
bind = SUPER SHIFT, BracketRight, scroller:expelwindow, right

# ~ pin

bind = SUPER, P, scroller:pin
bind = SUPER SHIFT, P, pin

# ~ select

bind = SUPER, F, scroller:selectiontoggle

bind = SUPER SHIFT, F, exec, $submap scroller_select && $submapHints scroller_select
submap = scroller_select
  bind = , W, scroller:selectionworkspace
  bind = , R, scroller:selectionreset
  bind = , Left, scroller:selectionmove, left
  bind = , Right, scroller:selectionmove, right
  bindr = , catchall, exec, $submapReset
submap = reset

# ~ jump/overview

bind = SUPER, R, scroller:jump
bind = SUPER, A, scroller:toggleoverview

# ~ float

bind = SUPER, V, togglefloating
bind = SUPER SHIFT, V, event, { "name": "togglefocus" }

# ~ fullscreen

# the first argument is hyprland window state, the second is client's state
bind = SUPER      , grave, fullscreenstate, 1 -1
bind = SUPER SHIFT, grave, fullscreenstate, 2 -1
bind = SUPER      , F11  , fullscreenstate, -1 2

# ~ settings/mode change

# TODO: add descriptions (`bindd`) because these commands are too long, looks ugly in the hints window
# sadly i can't think of a nice way to also display current value
# TODO: add mode change
bind = SUPER, BackSlash, exec, $submap scroller_settings && $submapHints scroller_settings
submap = scroller_settings
  bind = , C, exec, hyprctl keyword plugin:scroller:center_active_column $(hyprctl -j getoption plugin:scroller:center_active_column | jq '.int == 0')
  bind = SHIFT, C, exec, hyprctl keyword plugin:scroller:center_active_window $(hyprctl -j getoption plugin:scroller:center_active_window | jq '.int == 0')
  bindir = , catchall, exec, $submapReset
submap = reset
